{"version":3,"sources":["chatsubmit.js","chatwindow.js","registration.js","login.js","App.js","reportWebVitals.js","index.js"],"names":["ChatSubmit","props","state","field","handleSubmit","bind","handleInput","event","preventDefault","message","this","inputMessage","setState","target","name","value","onSubmit","onChange","className","type","Component","ChatWindow","fetch","then","response","json","data","options","method","headers","Cookies","get","body","JSON","stringify","ok","Error","map","id","onClick","handleLogout","Registration","username","email","password1","password2","handleRegistration","htmlFor","handleForm","Login","password","handleLogin","App","selection","user","a","handleError","err","console","warn","catch","key","set","remove","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89f68bdb.chunk.js","sourcesContent":["import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\n\n  class ChatSubmit extends Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        field: '',\n      }\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.handleInput = this.handleInput.bind(this);\n    }\n\n    handleSubmit(event) {\n      event.preventDefault();\n      const message = {\n        field: this.state.field,\n      };\n      this.props.inputMessage(message);\n\n      this.setState({field: ''});\n    }\n\n\n\n      handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n      }\n\n      render(){\n        return(\n        <form onSubmit={this.handleSubmit}>\n          <input onChange={this.handleInput} className=\"field\" type=\"text\" name=\"field\" value={this.state.field} />\n          <button className=\"button\" type=\"submit\">Send</button>\n        </form>\n      )}\n  }\nexport default ChatSubmit\n","import { Component } from 'react';\nimport ChatSubmit from './chatsubmit.js';\nimport Cookies from 'js-cookie';\n\nclass ChatWindow extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      message: [],\n    }\n\n    this.inputMessage = this.inputMessage.bind(this);\n  }\n  componentDidMount(){\n    fetch('/api/v1/chatlog/')\n    .then(response => response.json())\n    .then(data => this.setState({ message: data }));\n  }\n\n\n  inputMessage(message) {\n    const options = {\n      method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(message),\n    }\n    fetch('/api/v1/chatlog/', options)\n      .then(response => {\n\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n\n        return response.json();\n      })\n      .then(data => this.setState({message: [...this.state.message, data]}));\n    }\n\n  render() {\n    const message= this.state.message.map(message => (\n      <li key={message.id}>\n        <p>{message.field}</p>\n      </li>\n    ))\n    return(\n      <>\n      <div className=\"chat-log\">\n        <ul>{message}</ul>\n        <section>\n          <ChatSubmit inputMessage={this.inputMessage}/>\n        </section>\n        <button type=\"button\" onClick={this.props.handleLogout}>Logout</button>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default ChatWindow\n","import { Component } from 'react';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleRegistration(this.state);\n}\n\n\n   render() {\n     return(\n     <form onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password1\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password1\" name='password1'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password2\" className=\"form-label\">Confirm Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password2\" name='password2'></input>\n   </div>\n   <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.handleForm('login')}>Login</button>\n   <button type=\"submit\" className=\"btn btn-primary\">REGISTER</button>\n </form>\n)}\n\n}\n\nexport default Registration\n","import { Component } from 'react';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleLogin(this.state);\n    }\n\n\n   render() {\n     return(\n     <form onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password\" name='password'></input>\n   </div>\n   <button type=\"submit\" className=\"btn btn-link\">Login</button>\n   <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.props.handleForm('register')}>Register New User</button>\n   </form>\n)}\n}\n\nexport default Login\n","import React from 'react';\nimport Cookies from 'js-cookie';\nimport ChatWindow from './chatwindow.js';\nimport Registration from './registration.js';\nimport Login from './login.js'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: !!Cookies.get('Authorization') ? 'chat' : 'login'\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleForm = this.handleForm.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n\n  handleInput(event){\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  async handleLogin(user) {\n   const options = {\n     method: 'POST',\n     headers: {\n       'Content-Type': 'application/json',\n       'X-CSRFToken': Cookies.get('csrftoken'),\n     },\n     body: JSON.stringify(user),\n   };\n   const handleError = (err) => console.warn(err);\n   const response = await fetch('/rest-auth/login/', options);\n   const data = await response.json().catch(handleError);\n   if (data.key) {\n     Cookies.set('Authorization', `Token ${data.key}`);\n     this.setState({selection: 'chat'});\n   }\n }\n\n   handleForm(selection) {\n       this.setState({selection});\n     }\n\n   async handleRegistration(user) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options);\n    const data = await response.json().catch(handleError);\n    if (data.key) {\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState({selection: 'chat'});\n    }\n  }\n\n  async handleLogout() {\n          const options = {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n          };\n          const handleError = (err) => console.warn(err);\n          const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n          if(response.ok) {\n            Cookies.remove('Authorization');\n            this.setState({selection: 'login'});\n          }\n      }\n\n  render() {\n    // const cookie = Cookies.get('Authorization');\n    // console.log(cookie)\n    return(\n      <>\n      <div className=\"background\">\n        <h1>Online Chat Log</h1>\n        {this.state.selection === 'login' && <Login handleForm={this.handleForm} handleLogin={this.handleLogin}/>}\n        {this.state.selection === 'register' && <Registration handleForm={this.handleForm} handleRegistration={this.handleRegistration}/>}\n        {this.state.selection === 'chat' && <ChatWindow handleLogout={this.handleLogout}/>}\n      </div>\n      </>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}