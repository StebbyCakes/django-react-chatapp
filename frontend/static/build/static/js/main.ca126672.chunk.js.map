{"version":3,"sources":["chatsubmit.js","chatwindow.js","registration.js","login.js","App.js","reportWebVitals.js","index.js"],"names":["ChatSubmit","props","state","field","inputMessage","bind","handleInput","event","message","this","options","method","headers","Cookies","get","body","JSON","stringify","fetch","then","response","json","data","setState","target","name","value","onSubmit","onChange","className","type","Component","ChatWindow","map","id","Registration","username","email","password1","password2","handleSubmit","preventDefault","handleRegister","htmlFor","onClick","handleForm","Login","password","handleLogin","App","selection","handleRegistration","user","a","handleError","err","console","warn","catch","key","set","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RA2CeA,E,kDAtCX,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,MAAO,IAET,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBANH,E,gDAQlB,SAAaE,GAAQ,IAAD,OAEZC,EAAU,CACdL,MAAOM,KAAKP,MAAMC,OAEdO,EAAU,CACdC,OAAQ,OACNC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAEjCC,KAAMC,KAAKC,UAAUT,IAErBU,MAAM,mBAAoBR,GACvBS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAASD,Q,yBAG9B,SAAYf,GACVE,KAAKc,SAAL,eAAgBhB,EAAMiB,OAAOC,KAAOlB,EAAMiB,OAAOE,U,oBAGnD,WACE,OACA,uBAAMC,SAAUlB,KAAKL,aAArB,UACE,uBAAOwB,SAAUnB,KAAKH,YAAauB,UAAU,QAAQC,KAAK,OAAOL,KAAK,QAAQC,MAAOjB,KAAKP,MAAMC,QAChG,wBAAQ0B,UAAU,SAASC,KAAK,SAAhC,yB,GAnCiBC,aC+BZC,E,kDA/Bb,WAAY/B,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXM,QAAS,IAHK,E,qDAMlB,WAAoB,IAAD,OACjBU,MAAM,oBACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEf,QAASc,S,oBAGzC,WACE,IAAMd,EAASC,KAAKP,MAAMM,QAAQyB,KAAI,SAAAzB,GAAO,OAC3C,6BACE,4BAAIA,EAAQL,SADLK,EAAQ0B,OAInB,OACE,mCACA,sBAAKL,UAAU,WAAf,UACE,6BAAKrB,IACL,kCACE,cAAC,EAAD,e,GAxBeuB,aCgDVI,E,kDAhDb,WAAYlC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXkC,SAAU,GACVC,MAAO,GACPC,UAAW,GACXC,UAAW,IAEZ,EAAKjC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKmC,aAAe,EAAKA,aAAanC,KAAlB,gBATJ,E,+CAYrB,SAAYE,GACVE,KAAKc,SAAL,eAAgBhB,EAAMiB,OAAOC,KAAOlB,EAAMiB,OAAOE,U,0BAGnD,SAAanB,GACXA,EAAMkC,iBACNhC,KAAKR,MAAMyC,eAAejC,KAAKP,S,oBAI9B,WAAU,IAAD,OACP,OACA,uBAAMyB,SAAUlB,KAAK+B,aAArB,UACF,sBAAKX,UAAU,OAAf,UACE,uBAAOc,QAAQ,WAAWd,UAAU,aAApC,sBACA,uBAAOD,SAAUnB,KAAKH,YAAawB,KAAK,OAAOD,UAAU,eAAeK,GAAG,WAAWT,KAAK,gBAE7F,sBAAKI,UAAU,OAAf,UACE,uBAAOc,QAAQ,QAAQd,UAAU,aAAjC,mBACA,uBAAOD,SAAUnB,KAAKH,YAAawB,KAAK,QAAQD,UAAU,eAAeK,GAAG,QAAQT,KAAK,aAE3F,sBAAKI,UAAU,OAAf,UACE,uBAAOc,QAAQ,YAAYd,UAAU,aAArC,sBACA,uBAAOD,SAAUnB,KAAKH,YAAawB,KAAK,WAAWD,UAAU,eAAeK,GAAG,YAAYT,KAAK,iBAElG,sBAAKI,UAAU,OAAf,UACE,uBAAOc,QAAQ,YAAYd,UAAU,aAArC,8BACA,uBAAOD,SAAUnB,KAAKH,YAAawB,KAAK,WAAWD,UAAU,eAAeK,GAAG,YAAYT,KAAK,iBAElG,wBAAQK,KAAK,SAASD,UAAU,eAAee,QAAS,kBAAM,EAAK3C,MAAM4C,WAAW,UAApF,mBACA,wBAAQf,KAAK,SAASD,UAAU,kBAAhC,6B,GA3CwBE,aC2CZe,E,kDA1Cb,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXkC,SAAU,GACVC,MAAO,GACPU,SAAU,IAEX,EAAKzC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKmC,aAAe,EAAKA,aAAanC,KAAlB,gBARJ,E,+CAWrB,SAAYE,GACVE,KAAKc,SAAL,eAAgBhB,EAAMiB,OAAOC,KAAOlB,EAAMiB,OAAOE,U,0BAGnD,SAAanB,GACXA,EAAMkC,iBACNhC,KAAKR,MAAM+C,YAAYvC,KAAKP,S,oBAI3B,WAAU,IAAD,OACP,OACA,uBAAMyB,SAAUlB,KAAK+B,aAArB,UACF,sBAAKX,UAAU,OAAf,UACE,uBAAOc,QAAQ,WAAWd,UAAU,aAApC,sBACA,uBAAOD,SAAUnB,KAAKH,YAAawB,KAAK,OAAOD,UAAU,eAAeK,GAAG,WAAWT,KAAK,gBAE7F,sBAAKI,UAAU,OAAf,UACE,uBAAOc,QAAQ,QAAQd,UAAU,aAAjC,mBACA,uBAAOD,SAAUnB,KAAKH,YAAawB,KAAK,QAAQD,UAAU,eAAeK,GAAG,QAAQT,KAAK,aAE3F,sBAAKI,UAAU,OAAf,UACE,uBAAOc,QAAQ,WAAWd,UAAU,aAApC,sBACA,uBAAOD,SAAUnB,KAAKH,YAAawB,KAAK,WAAWD,UAAU,eAAeK,GAAG,WAAWT,KAAK,gBAEjG,wBAAQK,KAAK,SAASD,UAAU,eAAhC,mBACA,wBAAQC,KAAK,SAASD,UAAU,kBAAkBe,QAAS,kBAAM,EAAK3C,MAAM4C,WAAW,aAAvF,sC,GAtCiBd,aC+ELkB,G,wDAzEb,WAAYhD,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXgD,UAAarC,IAAQC,IAAI,iBAAmB,OAAS,SAEvD,EAAKR,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAK2C,YAAc,EAAKA,YAAY3C,KAAjB,gBACnB,EAAK8C,mBAAqB,EAAKA,mBAAmB9C,KAAxB,gBAC1B,EAAKwC,WAAa,EAAKA,WAAWxC,KAAhB,gBARD,E,+CAYnB,SAAYE,GACVE,KAAKc,SAAL,eAAgBhB,EAAMiB,OAAOC,KAAOlB,EAAMiB,OAAOE,U,gEAGjD,WAAkB0B,GAAlB,qBAAAC,EAAA,6DACO3C,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAE7BC,KAAMC,KAAKC,UAAUmC,IAEjBE,EAAc,SAACC,GAAD,OAASC,QAAQC,KAAKF,IAT3C,SAUwBrC,MAAM,oBAAqBR,GAVnD,cAUOU,EAVP,gBAWoBA,EAASC,OAAOqC,MAAMJ,GAX1C,QAWOhC,EAXP,QAYUqC,MACP9C,IAAQ+C,IAAI,gBAAZ,gBAAsCtC,EAAKqC,MAC3ClD,KAAKc,SAAS,CAAC2B,UAAW,UAd7B,gD,+EAkBD,SAAWA,GACPzC,KAAKc,SAAS,CAAC2B,gB,uEAGnB,WAAyBE,GAAzB,qBAAAC,EAAA,6DACO3C,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAE7BC,KAAMC,KAAKC,UAAUmC,IAEjBE,EAAc,SAACC,GAAD,OAASC,QAAQC,KAAKF,IAT3C,SAUwBrC,MAAM,2BAA4BR,GAV1D,cAUOU,EAVP,gBAWoBA,EAASC,OAAOqC,MAAMJ,GAX1C,QAWOhC,EAXP,QAYUqC,MACP9C,IAAQ+C,IAAI,gBAAZ,gBAAsCtC,EAAKqC,MAC3ClD,KAAKc,SAAS,CAAC2B,UAAW,UAd7B,gD,2EAkBD,WAGE,OACE,mCACA,sBAAKrB,UAAU,aAAf,UACE,iDAC0B,UAAzBpB,KAAKP,MAAMgD,WAAyB,cAAC,EAAD,CAAOL,WAAYpC,KAAKoC,WAAYG,YAAavC,KAAKuC,cACjE,aAAzBvC,KAAKP,MAAMgD,WAA4B,cAAC,EAAD,CAAcL,WAAYpC,KAAKoC,WAAYM,mBAAoB1C,KAAK0C,qBAClF,SAAzB1C,KAAKP,MAAMgD,WAAwB,cAAC,EAAD,a,GAlE1BW,IAAM9B,YCKT+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ca126672.chunk.js","sourcesContent":["import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\n\n  class ChatSubmit extends Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        field: '',\n      }\n      this.inputMessage = this.inputMessage.bind(this);\n      this.handleInput = this.handleInput.bind(this);\n    }\n    inputMessage(event) {\n\n      const message = {\n        field: this.state.field,\n      };\n      const options = {\n        method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(message),\n      }\n      fetch('/api/v1/chatlog/', options)\n        .then(response => response.json())\n        .then(data => this.setState(data));\n      }\n\n      handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n      }\n\n      render(){\n        return(\n        <form onSubmit={this.inputMessage}>\n          <input onChange={this.handleInput} className=\"field\" type=\"text\" name=\"field\" value={this.state.field} />\n          <button className=\"button\" type=\"submit\">Send</button>\n        </form>\n      )}\n  }\nexport default ChatSubmit\n","import { Component } from 'react';\nimport ChatSubmit from './chatsubmit.js';\n\nclass ChatWindow extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      message: [],\n    }\n  }\n  componentDidMount(){\n    fetch('/api/v1/chatlog/')\n    .then(response => response.json())\n    .then(data => this.setState({ message: data }));\n  }\n\n  render() {\n    const message= this.state.message.map(message => (\n      <li key={message.id}>\n        <p>{message.field}</p>\n      </li>\n    ))\n    return(\n      <>\n      <div className=\"chat-log\">\n        <ul>{message}</ul>\n        <section>\n          <ChatSubmit/>\n        </section>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default ChatWindow\n","import { Component } from 'react';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleRegister(this.state);\n}\n\n\n   render() {\n     return(\n     <form onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password1\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password1\" name='password1'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password2\" className=\"form-label\">Confirm Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password2\" name='password2'></input>\n   </div>\n   <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.handleForm('login')}>Login</button>\n   <button type=\"submit\" className=\"btn btn-primary\">REGISTER</button>\n </form>\n)}\n\n}\n\nexport default Registration\n","import { Component } from 'react';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleLogin(this.state);\n}\n\n\n   render() {\n     return(\n     <form onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password\" name='password'></input>\n   </div>\n   <button type=\"submit\" className=\"btn btn-link\">Login</button>\n   <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.props.handleForm('register')}>Register New User</button>\n   </form>\n)}\n}\n\nexport default Login\n","import React from 'react';\nimport Cookies from 'js-cookie';\nimport ChatWindow from './chatwindow.js';\nimport Registration from './registration.js';\nimport Login from './login.js'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: !!Cookies.get('Authorization') ? 'chat' : 'login'\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleForm = this.handleForm.bind(this);\n  }\n\n\n  handleInput(event){\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n    async handleLogin(user) {\n     const options = {\n       method: 'POST',\n       headers: {\n         'Content-Type': 'application/json',\n         'X-CSRFToken': Cookies.get('csrftoken'),\n       },\n       body: JSON.stringify(user),\n     };\n     const handleError = (err) => console.warn(err);\n     const response = await fetch('/rest-auth/login/', options);\n     const data = await response.json().catch(handleError);\n     if (data.key) {\n       Cookies.set('Authorization', `Token ${data.key}`);\n       this.setState({selection: 'chat'});\n     }\n   }\n\n   handleForm(selection) {\n       this.setState({selection});\n     }\n\n   async handleRegistration(user) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options);\n    const data = await response.json().catch(handleError);\n    if (data.key) {\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState({selection: 'chat'});\n    }\n  }\n\n  render() {\n    // const cookie = Cookies.get('Authorization');\n    // console.log(cookie)\n    return(\n      <>\n      <div className=\"background\">\n        <h1>Online Chat Log</h1>\n        {this.state.selection === 'login' && <Login handleForm={this.handleForm} handleLogin={this.handleLogin}/>}\n        {this.state.selection === 'register' && <Registration handleForm={this.handleForm} handleRegistration={this.handleRegistration}/>}\n        {this.state.selection === 'chat' && <ChatWindow/>}\n      </div>\n      </>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}