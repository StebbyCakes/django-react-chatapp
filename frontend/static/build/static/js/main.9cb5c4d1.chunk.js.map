{"version":3,"sources":["chatsubmit.js","messageDetail.js","chatwindow.js","registration.js","login.js","App.js","reportWebVitals.js","index.js"],"names":["ChatSubmit","props","state","messages","handleSubmit","bind","handleInput","event","preventDefault","message","this","options","method","headers","Cookies","get","body","JSON","stringify","fetch","then","response","json","setState","target","name","value","onSubmit","className","placeholder","onChange","type","Component","MessageDetail","isEditing","newMessage","editMessage","inputMessage","handleUpdate","onClick","has_owner_permissions","ChatWindow","removeMessage","fetchData","retrieveMessages","setInterval","clearInterval","ok","Error","data","id","index","findIndex","splice","catch","error","console","log","chatDisplay","map","Registration","username","email","password1","password2","handleRegistration","htmlFor","handleForm","Login","password","handleLogin","App","selection","handleLogout","user","a","handleError","err","warn","key","set","remove","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cb5c4d1.chunk.js","sourcesContent":["import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\n\n  class ChatSubmit extends Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        messages: '',\n      }\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.handleInput = this.handleInput.bind(this);\n    }\n\n    handleSubmit(event) {\n      event.preventDefault();\n      const message = {\n        messages: this.state.messages,\n      };\n      const options = {\n        method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n          body: JSON.stringify(message),\n      }\n      fetch('/api/v1/chat/', options)\n        .then(response => response.json());\n\n      this.setState({ messages: ''});\n    }\n\n\n\n      handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n      }\n\n      render(){\n        return(\n        <form onSubmit={this.handleSubmit}>\n          <textarea className=\"chat-submit\" name=\"messages\" value={this.state.messages} placeholder=\"Enter a message\" onChange={this.handleInput}></textarea>\n          <button className=\"button\" type=\"submit\">Send</button>\n        </form>\n      )}\n  }\nexport default ChatSubmit\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\nclass MessageDetail extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      isEditing: false,\n      message: this.props.newMessage.message,\n    }\n    this.editMessage = this.editMessage.bind(this);\n    this.inputMessage = this.inputMessage.bind(this);\n  }\n\neditMessage() {\n  const newMessage = this.props.newMessage;\n  newMessage.message = this.state.message;\n  this.props.handleUpdate(newMessage);\n  this.setState({isEditing: false});\n  }\n\n  inputMessage(event){\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n\n\n\nrender() {\n  const newMessage = this.props.newMessage;\n  return(\n    <li className='list'>\n      {\n          this.state.isEditing\n          ? <input type=\"text\" name=\"message\" value={this.state.message} onChange={this.handleInput}></input>\n          :  <p>{newMessage.message}</p>\n        }\n\n        {\n          this.state.isEditing\n          ? <button className =\"detail-button\" type=\"button\" onClick={this.editMessage}>SAVE</button>\n          : newMessage.has_owner_permissions && <button className =\"detail-button\" type=\"button\" onClick={() => this.setState({ isEditing: true})}>EDIT</button>\n        }\n      </li>\n    )\n  }\n}\n\nexport default MessageDetail;\n","import { Component } from 'react';\nimport ChatSubmit from './chatsubmit.js';\nimport Cookies from 'js-cookie';\nimport MessageDetail from './messageDetail.js'\n\nclass ChatWindow extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      messages: [],\n      // isEditing: null,\n      // edit: '',\n    }\n\n    // this.inputMessage = this.inputMessage.bind(this);\n    this.removeMessage = this.removeMessage.bind(this);\n    this.editMessage = this.editMessage.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n  }\n  componentDidMount() {\n    this.retrieveMessages = setInterval(this.fetchData, 500)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.retrieveMessages)\n  }\n\n  fetchData() {\n    fetch('/api/v1/chatlog/')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => this.setState({ messages: data }));\n  }\n\n\n  // inputMessage(message) {\n  //   const options = {\n  //     method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //         'X-CSRFToken': Cookies.get('csrftoken'),\n  //     },\n  //     body: JSON.stringify(message),\n  //   }\n  //   fetch('/api/v1/chatlog/', options)\n  //     .then(response => {\n  //\n  //       if (!response.ok) {\n  //         throw new Error('Network response was not ok');\n  //       }\n  //\n  //       return response.json();\n  //     })\n  //     .then(data => this.setState({message: [...this.state.message, data]}));\n  //   }\n\n\n    removeMessage(id) {\n    const options = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n    }\n\n    fetch(`/api/v1/chatlog/${id}/`, options)\n      .then(response => {\n        //logic to update state\n        const messages = [...this.state.messages];\n        const index = messages.findIndex(message => message.id === id);\n        messages.splice(index, 1);\n        this.setState({ messages });\n      })\n      .catch((error) => {\n        console.log.error('Error:', error);\n      });\n  }\n\neditMessage(message) {\n  const id = message.id;\n\n  const options = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n    body: JSON.stringify(message),\n  }\n\n  fetch(`/api/v1/chatlog/${id}/`, options)\n    .then(response => {\n\n      if(!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const messages = [ ...this.state.messages];\n      const index = messages.findIndex(message => message.id === id);\n      messages[index] = message;\n      this.setState({ messages });\n    });\n  }\n// Cookies.remove('Authorization') // this needs to go inside of the render whenever heroku doesnt work\n  render() {\n\n    const chatDisplay = this.state.messages.map((message) => (\n      <MessageDetail key={message.id} message={message} removeMessage={this.removeMessage} editMessage={this.editMessage}/>\n    ))\n    return(\n      <>\n      <div className=\"chat-log\">\n        <ul>{chatDisplay}</ul>\n          <section>\n          <ChatSubmit/>\n          </section>\n\n        </div>\n      </>\n    )\n  }\n}\n\nexport default ChatWindow\n","import { Component } from 'react';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleRegistration(this.state);\n}\n\n\n   render() {\n     return(\n     <form onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password1\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password1\" name='password1'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password2\" className=\"form-label\">Confirm Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password2\" name='password2'></input>\n   </div>\n   <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.handleForm('login')}>Login</button>\n   <button type=\"submit\" className=\"btn btn-primary\">REGISTER</button>\n </form>\n)}\n\n}\n\nexport default Registration\n","import { Component } from 'react';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n     }\n     this.handleInput = this.handleInput.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\nhandleInput(event) {\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleSubmit(event){\n  event.preventDefault();\n  this.props.handleLogin(this.state);\n    }\n\n\n   render() {\n     return(\n     <form onSubmit={this.handleSubmit}>\n   <div className=\"mb-3\">\n     <label htmlFor=\"username\" className=\"form-label\">Username</label>\n     <input onChange={this.handleInput} type=\"text\" className=\"form-control\" id=\"username\" name='username'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"email\" className=\"form-label\">Email</label>\n     <input onChange={this.handleInput} type=\"email\" className=\"form-control\" id=\"email\" name='email'></input>\n   </div>\n   <div className=\"mb-3\">\n     <label htmlFor=\"password\" className=\"form-label\">Password</label>\n     <input onChange={this.handleInput} type=\"password\" className=\"form-control\" id=\"password\" name='password'></input>\n   </div>\n   <button type=\"submit\" className=\"btn btn-link\">Login</button>\n   <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.props.handleForm('register')}>Register New User</button>\n   </form>\n)}\n}\n\nexport default Login\n","import React from 'react';\nimport Cookies from 'js-cookie';\nimport ChatWindow from './chatwindow.js';\nimport Registration from './registration.js';\nimport Login from './login.js'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: !!Cookies.get('Authorization') ? 'chat' : 'login'\n    }\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleForm = this.handleForm.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n\n\n  async handleLogin(user) {\n   const options = {\n     method: 'POST',\n     headers: {\n       'Content-Type': 'application/json',\n       'X-CSRFToken': Cookies.get('csrftoken'),\n     },\n     body: JSON.stringify(user),\n   };\n   const handleError = (err) => console.warn(err);\n   const response = await fetch('/rest-auth/login/', options);\n   const data = await response.json().catch(handleError);\n   if (data.key) {\n     Cookies.set('Authorization', `Token ${data.key}`);\n     this.setState({selection: 'chat'});\n   }\n }\n\n   handleForm(selection) {\n       this.setState({selection});\n     }\n\n   async handleRegistration(user) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options);\n    const data = await response.json().catch(handleError);\n    if (data.key) {\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState({selection: 'chat'});\n    }\n  }\n\n  async handleLogout() {\n          const options = {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n          };\n          const handleError = (err) => console.warn(err);\n          const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n          if(response.ok) {\n            Cookies.remove('Authorization');\n            this.setState({selection: 'login'});\n          }\n      }\n      // const cookie = Cookies.get('Authorization');\n      // console.log(cookie)\n  render() {\n\n    return(\n      <>\n      <div className=\"background\">\n        <h1>Online Chat Log</h1>\n        {this.state.selection === 'login' && <Login handleForm={this.handleForm} handleLogin={this.handleLogin}/>}\n        {this.state.selection === 'register' && <Registration handleForm={this.handleForm} handleRegistration={this.handleRegistration}/>}\n        {this.state.selection === 'chat' && <ChatWindow handleLogout={this.handleLogout}/>}\n      </div>\n      </>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}