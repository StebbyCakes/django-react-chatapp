{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","message","text","inputMessage","bind","handleInput","fetch","then","response","json","data","setState","event","this","target","name","value","field","options","method","headers","Cookies","get","body","JSON","stringify","map","id","className","onSubmit","onChange","type","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAkEeA,E,kDA7Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,KAAM,IAER,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBAPF,E,qDAUnB,WAAoB,IAAD,OACjBE,MAAM,oBACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEV,QAASS,S,yBAEzC,SAAYE,GACVC,KAAKF,SAAL,eAAgBC,EAAME,OAAOC,KAAOH,EAAME,OAAOE,U,0BAGnD,SAAaJ,GAAQ,IAAD,OAEZX,EAAU,CACdgB,MAAOJ,KAAKb,MAAMiB,OAEdC,EAAU,CACdC,OAAQ,OACNC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAEjCC,KAAMC,KAAKC,UAAUxB,IAErBK,MAAM,mBAAoBY,GACvBX,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAASD,Q,oBAGhC,WACE,IAAMT,EAASY,KAAKb,MAAMC,QAAQyB,KAAI,SAAAzB,GAAO,OAC3C,6BACE,4BAAIA,EAAQgB,SADLhB,EAAQ0B,OAInB,OACE,mCACA,sBAAKC,UAAU,WAAf,UACE,iDACA,yBAASA,UAAU,OAAnB,SACA,uBAAMC,SAAUhB,KAAKV,aAArB,UACE,uBAAO2B,SAAUjB,KAAKR,YAAauB,UAAU,QAAQG,KAAK,OAAOhB,KAAK,QAAQC,MAAOH,KAAKb,MAAMiB,QAChG,wBAAQW,UAAU,SAASG,KAAK,SAAhC,uBAGF,6BAAK9B,a,GAtDK+B,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f4ea8ba9.chunk.js","sourcesContent":["import React from 'react';\nimport Cookies from 'js-cookie';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: [],\n      text: '',\n    }\n    this.inputMessage = this.inputMessage.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  componentDidMount(){\n    fetch('/api/v1/chatlog/')\n    .then(response => response.json())\n    .then(data => this.setState({ message: data }));\n  }\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  inputMessage(event) {\n\n    const message = {\n      field: this.state.field,\n    };\n    const options = {\n      method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n    body: JSON.stringify(message),\n    }\n    fetch('/api/v1/chatlog/', options)\n      .then(response => response.json())\n      .then(data => this.setState(data));\n    }\n\n  render() {\n    const message= this.state.message.map(message => (\n      <li key={message.id}>\n        <p>{message.field}</p>\n      </li>\n    ))\n    return(\n      <>\n      <div className=\"chat-log\">\n        <h1>Online Chat Log</h1>\n        <section className=\"main\">\n        <form onSubmit={this.inputMessage}>\n          <input onChange={this.handleInput} className=\"field\" type=\"text\" name=\"field\" value={this.state.field} />\n          <button className=\"button\" type=\"submit\">Send</button>\n        </form>\n        </section>\n        <ul>{message}</ul>\n        </div>\n      </>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}